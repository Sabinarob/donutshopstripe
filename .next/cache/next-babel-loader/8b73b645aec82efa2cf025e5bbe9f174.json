{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sabina/Workspace/donut-shop-sabina-stripe/components/CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 40px;\\n  display: flex;\\n  align-items: center;\\n\\n  & .StripeElement {\\n    width: 100%;\\n    padding: 15px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\nimport Row from \"./prebuilt/Row\";\nimport BillingDetailsFields from \"./prebuilt/BillingDetailsFields\";\nimport SubmitButton from \"./prebuilt/SubmitButton\";\nimport CheckoutError from \"./prebuilt/CheckoutError\";\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nvar CardElementContainer = styled.div(_templateObject());\n_c = CardElementContainer;\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  _s();\n\n  var price = _ref.price,\n      onSuccessfulCheckout = _ref.onSuccessfulCheckout;\n\n  var _useState = useState(false),\n      isProcessing = _useState[0],\n      setProcessingTo = _useState[1];\n\n  var _useState2 = useState(),\n      checkoutError = _useState2[0],\n      setCheckoutError = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleFormSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ev) {\n      var billingDetails, cardElement, _yield$axios$post, clientSecret, paymentMethodReq, confrimedCardPayment;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ev.preventDefault();\n              billingDetails = {\n                name: ev.target.name.value,\n                email: ev.target.email.value,\n                address: {\n                  city: ev.target.city.value,\n                  line1: ev.target.address.value,\n                  state: ev.target.state.value,\n                  postal_code: ev.target.zip.value\n                }\n              };\n              setProcessingTo(true);\n              cardElement = elements.getElement(CardElement);\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post(\"/api/payment_intents\", {\n                amount: price * 100\n              });\n\n            case 7:\n              _yield$axios$post = _context.sent;\n              clientSecret = _yield$axios$post.data;\n              _context.next = 11;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: cardElement,\n                billing_details: billingDetails\n              });\n\n            case 11:\n              paymentMethodReq = _context.sent;\n\n              if (!paymentMethodReq.error) {\n                _context.next = 16;\n                break;\n              }\n\n              setCheckoutError(paymentMethodReq.error.message);\n              setProcessingTo(false);\n              return _context.abrupt(\"return\");\n\n            case 16:\n              _context.next = 18;\n              return stripe.confirmCardPayment(clientSecret, {\n                payment_method: paymentMethodReq.paymentMethod.id\n              });\n\n            case 18:\n              confrimedCardPayment = _context.sent;\n\n              if (!confrimedCardPayment.error) {\n                _context.next = 23;\n                break;\n              }\n\n              setCheckoutError(confrimedCardPayment.error.message);\n              setProcessingTo(false);\n              return _context.abrupt(\"return\");\n\n            case 23:\n              console.log(\"Successful payment of $\".concat(price));\n              onSuccessfulCheckout();\n              _context.next = 30;\n              break;\n\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](4);\n              setCheckoutError(_context.t0.message);\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 27]]);\n    }));\n\n    return function handleFormSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var CardElementOptions = {\n    style: {\n      base: {\n        fontSize: \"16px\",\n        color: \"#fff\",\n        \"::placeholder\": {\n          color: \"#87bbfd\"\n        }\n      },\n      invalid: {\n        color: \"#FFC7EE\",\n        iconColor: \"#FFC7EE\"\n      }\n    }\n  };\n  return __jsx(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(BillingDetailsFields, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(CardElementContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(CardElement, {\n    options: CardElementOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))), checkoutError && __jsx(CheckoutError, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, checkoutError), __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, __jsx(SubmitButton, {\n    disabled: isProcessing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, isProcessing ? \"Processing...\" : \"Pay $\".concat(price))));\n};\n\n_s(CheckoutForm, \"2xw3RUxwBWLOQjltidPO4c7nnLg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c2 = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardElementContainer\");\n$RefreshReg$(_c2, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/sabina/Workspace/donut-shop-sabina-stripe/components/CheckoutForm.jsx"],"names":["useState","styled","axios","Row","BillingDetailsFields","SubmitButton","CheckoutError","CardElement","useElements","useStripe","CardElementContainer","div","CheckoutForm","price","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","stripe","elements","handleFormSubmit","ev","preventDefault","billingDetails","name","target","value","email","address","city","line1","state","postal_code","zip","cardElement","getElement","post","amount","clientSecret","data","createPaymentMethod","type","card","billing_details","paymentMethodReq","error","message","confirmCardPayment","payment_method","paymentMethod","id","confrimedCardPayment","console","log","CardElementOptions","style","base","fontSize","color","invalid","iconColor"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\n\nimport Row from \"./prebuilt/Row\";\nimport BillingDetailsFields from \"./prebuilt/BillingDetailsFields\";\nimport SubmitButton from \"./prebuilt/SubmitButton\";\nimport CheckoutError from \"./prebuilt/CheckoutError\";\n\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\nconst CardElementContainer = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n\nconst CheckoutForm = ({ price, onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleFormSubmit = async ev => {\n    ev.preventDefault();\n\n    const billingDetails = {\n      name: ev.target.name.value,\n      email: ev.target.email.value,\n      address: {\n        city: ev.target.city.value,\n        line1: ev.target.address.value,\n        state: ev.target.state.value,\n        postal_code: ev.target.zip.value\n      }\n    };\n    setProcessingTo(true);\n    const cardElement = elements.getElement(CardElement);\n    try {\n      \n      const {data: clientSecret} = await axios.post(\"/api/payment_intents\", {\n        amount: price * 100,\n      });\n\n      const paymentMethodReq = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details : billingDetails\n      });\n\n      if (paymentMethodReq.error) {\n        setCheckoutError(paymentMethodReq.error.message);\n        setProcessingTo(false);\n        return;\n      } \n    \n      const confrimedCardPayment = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: paymentMethodReq.paymentMethod.id,\n      });\n\n      if (confrimedCardPayment.error) {\n        setCheckoutError(confrimedCardPayment.error.message);\n        setProcessingTo(false);\n        return;\n      }\n\n      console.log(`Successful payment of $${price}` )\n      onSuccessfulCheckout();\n\n    } catch (err) {\n      setCheckoutError(err.message);\n    }\n\n};\n\n\n  const CardElementOptions = {\n    style: {\n      base: {\n        fontSize: \"16px\",\n        color: \"#fff\",\n        \"::placeholder\" : {\n          color: \"#87bbfd\",\n        },\n      },\n      invalid: {\n        color: \"#FFC7EE\",\n        iconColor: \"#FFC7EE\",\n      },\n    },\n  };\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <Row>\n        <BillingDetailsFields />\n      </Row>\n      <Row>\n        <CardElementContainer>\n          <CardElement options={CardElementOptions}></CardElement>\n        </CardElementContainer>\n      </Row>\n      {checkoutError && <CheckoutError>{checkoutError}</CheckoutError>}\n      <Row>\n        <SubmitButton disabled={isProcessing}>\n          {isProcessing ? \"Processing...\" : `Pay $${price}`}\n        </SubmitButton>\n      </Row>\n    </form>\n  );\n};\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}